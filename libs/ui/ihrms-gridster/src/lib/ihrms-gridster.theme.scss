@use 'sass:map';
@use '@angular/material' as mat;

@mixin gridster-theme($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);

  // Get the primary color palette from the color-config.
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');


  :root {
    gridster {
      background-color: white //mat.get-color-from-palette($primary-palette, 50);
    }

    gridster-item {
      background: transparent;
      box-shadow: 0px 5px 5px -3px rgb(0 0 0 / 20%), 0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%);
      border-radius: 2px;

      > *:nth-child(1) {
        display: block;
      }

      > *:nth-child(2) > *:first-child {
        padding: 10px;
        height: calc(100% - 20px);
      }
      &.flatGridsterItem {
        box-shadow: none;
        border-radius: 0;

        > *:nth-child(2) > *:first-child {
          padding: 0;
          height: calc(100%);
        }

        .scrollable {
          padding: 0;
        }
        ihrms-grid {
          height: calc(100%);
        }
      }
      &.gridComponentFullHeight {
        .scrollable {
          padding: 0;
          height: calc(100% - 35px) !important;
        }
        ihrms-grid {
          height: calc(100%);
        }
      }

      &.bg-white {
        background: white;
      }
    }
    .noRowData {
      .ag-body-horizontal-scroll {
        min-height: 100px !important;
      }
      .ag-overlay {
        top: 25px;
      }
    }
  }

}

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);


  .ihrms-gridster {
    //font-family: mat.font-family($typography-config);
  }

}
